# RUNNER CLASS FOR TESTING SEARCHES AND SORTS SCRIPTS

import Searches 
import Sorts

#large list contains 1000 random integers from 1 to 1000
LARGE_LIST = [
    815, 429, 652, 133, 333, 714, 301, 481, 85, 545, 240, 259, 533, 833, 467, 922, 472, 346, 951, 477, 95, 510, 717, 906, 637, 285, 723, 987, 691, 980, 502, 548, 217, 254, 418, 516, 865, 59, 683, 442, 877, 191, 6, 469, 116, 360, 687, 745, 381, 527, 247, 720, 245, 840, 4, 841, 234, 658, 721, 988, 118, 280, 784, 143, 165, 30, 524, 37, 227, 318, 435, 642, 391, 324, 284, 486, 760, 309, 170, 141, 571, 953, 109, 701, 991, 464, 241, 793, 172, 179, 220, 352, 662, 252, 192, 3, 80, 205, 375, 573, 159, 64, 968, 26, 355, 216, 476, 432, 566, 164, 807, 515, 320, 52, 562, 268, 578, 911, 489, 767, 79, 110, 625, 836, 158, 534, 952, 387, 336, 137, 18, 572, 638, 950, 131, 609, 12, 569, 490, 509, 119, 584, 962, 910, 94, 596, 460, 522, 470, 264, 233, 419, 393, 574, 195, 266, 713, 738, 709, 28, 125, 892, 547, 184, 739, 363, 619, 475, 616, 413, 342, 474, 875, 323, 925, 853, 180, 302, 742, 731, 647, 590, 598, 733, 567, 359, 166, 458, 193, 787, 426, 525, 449, 965, 395, 248, 440, 702, 894, 303, 362, 656, 447, 817, 410, 506, 76, 727, 292, 459, 315, 561, 366, 211, 881, 744, 335, 226, 441, 483, 712, 790, 958, 909, 629, 411, 386, 828, 148, 212, 209, 725, 606, 809, 327, 937, 215, 897, 970, 698, 238, 544, 374, 835, 115, 994, 735, 754, 495, 771, 120, 185, 412, 893, 752, 8, 690, 880, 445, 523, 199, 175, 908, 24, 649, 763, 685, 651, 190, 650, 201, 90, 420, 666, 814, 146, 829, 347, 822, 985, 32, 239, 734, 969, 174, 917, 866, 879, 1, 10, 40, 837, 634, 718, 930, 43, 491, 468, 819, 260, 171, 624, 93, 942, 274, 49, 497, 873, 281, 597, 648, 887, 153, 68, 482, 800, 439, 488, 845, 168, 71, 246, 703, 568, 558, 811, 88, 532, 369, 65, 83, 443, 242, 42, 986, 810, 868, 340, 106, 161, 622, 416, 473, 947, 904, 499, 801, 576, 189, 206, 557, 55, 480, 630, 105, 380, 957, 157, 736, 834, 365, 781, 700, 58, 372, 103, 577, 896, 842, 695, 437, 886, 150, 394, 680, 623, 943, 383, 770, 221, 984, 63, 401, 692, 874, 307, 269, 244, 219, 602, 326, 61, 885, 446, 70, 60, 255, 684, 645, 134, 697, 7, 976, 611, 677, 183, 816, 729, 831, 939, 653, 805, 941, 726, 858, 848, 773, 580, 593, 177, 592, 595, 15, 871, 453, 960, 425, 923, 46, 862, 321, 601, 279, 827, 139, 686, 901, 855, 484, 926, 208, 907, 565, 511, 882, 197, 825, 92, 173, 604, 294, 5, 385, 376, 142, 932, 287, 954, 423, 305, 564, 430, 556, 250, 232, 236, 81, 122, 319, 813, 935, 663, 306, 147, 843, 98, 407, 610, 351, 400, 272, 114, 912, 808, 176, 377, 225, 769, 436, 792, 38, 851, 9, 715, 230, 664, 870, 249, 392, 785, 74, 528, 710, 671, 996, 406, 974, 316, 273, 308, 282, 963, 918, 421, 293, 398, 631, 1000, 719, 492, 688, 367, 737, 586, 758, 463, 500, 19, 678, 529, 21, 612, 559, 465, 796, 431, 526, 854, 397, 451, 667, 471, 389, 456, 732, 262, 388, 821, 669, 329, 913, 313, 328, 113, 654, 783, 916, 424, 852, 331, 672, 751, 229, 364, 444, 531, 552, 485, 121, 501, 583, 990, 846, 753, 878, 955, 39, 542, 776, 69, 659, 594, 627, 582, 415, 804, 832, 27, 304, 982, 382, 317, 403, 16, 979, 791, 747, 213, 537, 270, 182, 981, 434, 214, 764, 518, 99, 617, 777, 149, 641, 160, 298, 520, 997, 676, 277, 51, 409, 207, 53, 97, 961, 350, 682, 876, 299, 503, 210, 756, 591, 640, 856, 786, 44, 759, 275, 973, 762, 104, 20, 967, 87, 999, 129, 14, 730, 535, 237, 635, 312, 202, 670, 929, 452, 797, 934, 778, 585, 368, 554, 371, 422, 251, 243, 314, 621, 310, 766, 765, 289, 322, 588, 361, 863, 144, 283, 551, 755, 57, 794, 728, 849, 461, 639, 780, 839, 228, 402, 655, 505, 107, 530, 888, 194, 928, 126, 620, 613, 757, 479, 438, 724, 448, 646, 338, 938, 798, 334, 136, 607, 706, 357, 903, 864, 740, 971, 155, 11, 72, 48, 349, 487, 181, 775, 779, 288, 256, 130, 788, 722, 332, 102, 223, 196, 493, 427, 124, 370, 850, 231, 222, 661, 748, 546, 45, 603, 772, 983, 198, 353, 705, 286, 919, 806, 859, 945, 883, 633, 826, 944, 56, 128, 513, 838, 543, 675, 587, 77, 795, 998, 455, 538, 615, 330, 799, 151, 512, 344, 992, 560, 154, 169, 417, 949, 857, 278, 746, 889, 167, 337, 761, 749, 895, 50, 414, 614, 295, 514, 454, 300, 140, 358, 802, 200, 186, 152, 975, 679, 644, 993, 989, 496, 581, 396, 521, 290, 112, 575, 390, 101, 218, 618, 478, 768, 263, 579, 936, 704, 135, 681, 657, 966, 41, 956, 100, 235, 117, 540, 33, 872, 707, 823, 343, 789, 258, 405, 494, 660, 25, 605, 78, 379, 311, 35, 915, 498, 643, 847, 708, 599, 156, 75, 17, 339, 31, 297, 741, 203, 694, 271, 959, 404, 541, 36, 188, 608, 636, 62, 914, 91, 373, 291, 84, 905, 261, 933, 674, 921, 66, 348, 820, 844, 54, 830, 345, 127, 178, 668, 869, 204, 457, 507, 972, 699, 750, 920, 267, 693, 356, 689, 867, 818, 563, 824, 632, 325, 600, 553, 517, 466, 47, 82, 861, 946, 948, 399, 940, 570, 2, 408, 29, 519, 890, 378, 924, 774, 22, 138, 224, 450, 187, 589, 257, 163, 162, 539, 108, 812, 354, 508, 743, 123, 13, 86, 898, 145, 555, 626, 550, 927, 900, 34, 462, 73, 891, 433, 782, 696, 276, 384, 67, 341, 716, 665, 504, 265, 884, 978, 977, 96, 549, 296, 931, 23, 711, 899, 673, 111, 995, 428, 132, 253, 902, 964, 860, 536, 803, 89, 628
]
#medium list contains 100 random integers from 1 to 500
MEDIUM_LIST = [
    100, 248, 369, 266, 63, 42, 226, 325, 182, 376, 412, 178, 359, 265, 51, 185, 456, 411, 419, 131, 141, 491, 52, 304, 315, 145, 380, 13, 327, 9, 238, 450, 208, 16, 27, 405, 500, 11, 323, 39, 123, 48, 89, 75, 61, 163, 499, 451, 432, 425, 224, 414, 233, 92, 474, 362, 284, 429, 187, 269, 132, 445, 372, 53, 166, 79, 41, 77, 219, 333, 114, 88, 99, 95, 216, 282, 301, 302, 70, 287, 469, 481, 404, 207, 44, 393, 213, 211, 476, 441, 416, 220, 479, 353, 153, 334, 447, 111, 164, 423
]
#master list contains self made list
MASTER_LIST = [
    [1,2,3,4,5,6,7,8,9,10], #0:                                     10 sorted first 10 numbers
    [0,1,1,2,3,5,8,13,21,34,55], #1:                                11 sorted fib sequence
    [5,10,15,20,25,30,35,40,45,50,65,70,75,80,85,90,95,100], #2     20 sorted multiples of 5
    [3,6,9,12,15,18,21,24,27,30], #3                                10 sorted multiples of 3

    [10,9,8,7,6,5,4,3,2,1], #4                                      10 BACKsorted first 10 numbers
    [89,76,66,58,41,34,26,11,7,2], #5                               10 BACKsorted random

    [8,12,4,64,100,60,20,28,40,16], #6                              10 UNsorted multiples of 4
    [23,52,66,3,42,63,45,27,43,23,5,57,3,2,3,2], #7                 16 UNsorted random
    [90,4,23,5,2,35,23,52,3,235,23,5,42,4,5,2,32,5,57,34,25,242,435,235,23,52,4,52,3,235,235,2] #8  32 UNsorted random
]
LARGE_LIST_1 = MEDIUM_LIST[:]
LARGE_LIST_2 = MEDIUM_LIST[:]
LARGE_LIST_3 = MEDIUM_LIST[:]

ans = input('\nReady to Start Bubble Sort? (y/n)')
if ans == 'y':
    print('\n====================================BUBBLE SORT====================================\n')
    result = Sorts.bubbleSortTest(LARGE_LIST_1)
    print('FINAL SORTED LIST:\n',result)
ans = input('\nReady to Start Selection Sort? (y/n)')
if ans == 'y':
    print('\n====================================SELECTION SORT====================================\n')
    result = Sorts.selectionSortTest(LARGE_LIST_2)
    print('FINAL SORTED LIST:\n',result)
ans = input('\nReady to Start Merge Sort? (y/n)')
if ans == 'y':
    print('\n====================================MERGE SORT====================================\n')
    result = Sorts.mergeSortTest(LARGE_LIST_3)
    print('FINAL SORTED LIST:\n',result)